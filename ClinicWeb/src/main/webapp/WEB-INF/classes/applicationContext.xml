<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">


	<import resource="classpath:wee-dao-context.xml" />
	<import resource="classpath:wee-security-context.xml" />
	<import resource="classpath:wee-service-context.xml" />
	<import resource="classpath:wee-web-context.xml" />


	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.password.StandardPasswordEncoder">
		<constructor-arg value="ThisIsASecretSoChangeMe" />
	</bean>

	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider
			user-service-ref="userService">
			<security:password-encoder ref="passwordEncoder"></security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>

	<security:http realm="Protected API" use-expressions="true"
		auto-config="false" create-session="stateless" entry-point-ref="unauthorizedEntryPoint"
		authentication-manager-ref="authenticationManager">
		<security:custom-filter ref="authenticationTokenProcessingFilter"
			position="FORM_LOGIN_FILTER" />
		<security:intercept-url pattern="/rest/auth/token"
			access="permitAll" />
		<security:intercept-url pattern="/rest/SystemUser/newPatient"
			access="permitAll" />
		<security:intercept-url pattern="/rest/SystemUser/newDoctor"
			access="hasRole('admin') or hasRole('superAdmin')" />
		<security:intercept-url pattern="/rest/SystemUser/newReceptionist"
			access="hasRole('admin') or hasRole('superAdmin')" />
		<security:intercept-url pattern="/rest/SystemUser/newAdmin"
			access="hasRole('superAdmin')" />
		<security:intercept-url pattern="/rest/SystemUser/save"
			access="denyAll" />
		<security:intercept-url pattern="/rest/Visit/list"
			access="hasRole('admin') or hasRole('superAdmin') or hasRole('doctor') or hasRole('receptionist')" />



		<!-- listowanie specjalizacji(wszyscy) -->
		<security:intercept-url pattern="/rest/Specialization/list"
			access="permitAll" />


		<!-- listowanie lekarzy(wszyscy) -->
		<security:intercept-url pattern="/rest/SystemUser/doctors/all"
			access="permitAll" />

		<!-- listowanie lekarzy według specjalizacji(wszyscy) -->
		<security:intercept-url
			pattern="/rest/SystemUser/doctors/specialization/{specialization}"
			access="permitAll" />


		<!-- listowanie godzin pracy lekarza w ciągu tygodnia(wszyscy) -->
		<security:intercept-url pattern="/rest/VisitScheduler/doctor/{doctor}"
			access="permitAll" />


		<!-- listowanie wizyt lekarza w określonym terminie(wszyscy) -->
		<security:intercept-url
			pattern="/rest/Visit/doctor/{doctor}/date/{start_date}/{stop_date}"
			access="permitAll" />


		<!-- listowanie wizyt lekarza przy wybranej specjalizacji w określonym 
			terminie(wszyscy) -->
		<security:intercept-url
			pattern="/rest/Visit/doctor/{doctor}/specialization/Dermatolog/date/{start_date}/{stop_date}"
			access="permitAll" />


		<!-- listowanie wizty z danej specializacji z przedzialu czasowego -->
		<security:intercept-url
			pattern="/rest/Visit/specialization/Dermatolog/{start_date}/{stop_date}"
			access="permitAll" />



		<security:intercept-url method="GET" pattern="/rest/**"
			access="hasRole('patient') or hasRole('admin') or hasRole('superAdmin') or hasRole('doctor') or hasRole('receptionist')" />
		<security:intercept-url method="PUT" pattern="/rest/**"
			access="hasRole('patient') or hasRole('admin') or hasRole('superAdmin') or hasRole('doctor') or hasRole('receptionist')" />
		<security:intercept-url method="POST" pattern="/rest/**"
			access="hasRole('patient') or hasRole('admin') or hasRole('superAdmin') or hasRole('doctor') or hasRole('receptionist')" />

		<security:intercept-url method="DELETE"
			pattern="/rest/news/**" access="hasRole('admin')" />
	</security:http>

	<bean id="unauthorizedEntryPoint" class="com.eclinic.web.rest.security.UnauthorizedEntryPoint" />

	<bean
		class="com.eclinic.web.rest.security.AuthenticationTokenProcessingFilter"
		id="authenticationTokenProcessingFilter">

	</bean>
</beans>