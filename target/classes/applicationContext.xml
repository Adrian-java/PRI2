<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
	http://www.springframework.org/schema/task
	http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<task:annotation-driven />
	
	<import resource="classpath:wee-dao-context.xml" />
	<import resource="classpath:wee-security-context.xml" />
	<import resource="classpath:wee-service-context.xml" />
	<import resource="classpath:wee-web-context.xml" />

	<bean id="emailReminder" class="com.eclinic.email.sender.EmailReminder"></bean>
	<bean id="visitWriter" class="com.eclinic.email.sender.VisitWriter"></bean>
	<bean id="emailSender" class="com.eclinic.email.sender.EmailSender"></bean>

	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.password.StandardPasswordEncoder">
		<constructor-arg value="ThisIsASecretSoChangeMe" />
	</bean>

	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider
			user-service-ref="userService">
			<security:password-encoder ref="passwordEncoder"></security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>

	<security:http realm="Protected API" use-expressions="true"
		auto-config="false" create-session="stateless" entry-point-ref="unauthorizedEntryPoint"
		authentication-manager-ref="authenticationManager">
		<security:custom-filter ref="authenticationTokenProcessingFilter"
			position="FORM_LOGIN_FILTER" />
		<security:intercept-url pattern="/rest/auth/token"
			access="permitAll" />
		<security:intercept-url pattern="/rest/SystemUser/newPatient"
			access="permitAll" />
		<security:intercept-url pattern="/rest/SystemUser/newDoctor"
			access="hasRole('admin') or hasRole('superAdmin')" />
		<security:intercept-url pattern="/rest/SystemUser/newReceptionist"
			access="hasRole('admin') or hasRole('superAdmin')" />
		<security:intercept-url pattern="/rest/SystemUser/newAdmin"
			access="hasRole('superAdmin')" />
		<security:intercept-url pattern="/rest/SystemUser/save"
			access="denyAll" />

		<security:intercept-url method="GET" pattern="/rest/**"
			access="permitAll" />
		<security:intercept-url method="PUT" pattern="/rest/**"
			access="permitAll" />
		<security:intercept-url method="POST" pattern="/rest/**"
			access="permitAll" />
		<security:intercept-url method="DELETE"
			pattern="/rest/news/**" access="permitAll" />
	</security:http>

	<bean id="unauthorizedEntryPoint" class="com.eclinic.web.rest.security.UnauthorizedEntryPoint" />

	<bean
		class="com.eclinic.web.rest.security.AuthenticationTokenProcessingFilter"
		id="authenticationTokenProcessingFilter">

	</bean>

</beans>